"use strict";var ApplicationConfiguration=function(){var applicationModuleName="mean",applicationModuleVendorDependencies=["ngResource","ngAnimate","ui.router","ui.bootstrap","ui.utils"],registerModule=function(moduleName){angular.module(moduleName,[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("articles"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("koora-admin"),ApplicationConfiguration.registerModule("koora"),ApplicationConfiguration.registerModule("users"),angular.module("articles").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Articles","articles","dropdown","/articles(/create)?"),Menus.addSubMenuItem("topbar","articles","List Articles","articles"),Menus.addSubMenuItem("topbar","articles","New Article","articles/create")}]),angular.module("articles").config(["$stateProvider",function($stateProvider){$stateProvider.state("listArticles",{url:"/articles",templateUrl:"modules/articles/views/list-articles.client.view.html"}).state("createArticle",{url:"/articles/create",templateUrl:"modules/articles/views/create-article.client.view.html"}).state("viewArticle",{url:"/articles/:articleId",templateUrl:"modules/articles/views/view-article.client.view.html"}).state("editArticle",{url:"/articles/:articleId/edit",templateUrl:"modules/articles/views/edit-article.client.view.html"})}]),angular.module("articles").controller("ArticlesController",["$scope","$stateParams","$location","Authentication","Articles",function($scope,$stateParams,$location,Authentication,Articles){$scope.authentication=Authentication,$scope.create=function(){var article=new Articles({title:this.title,content:this.content});article.$save(function(response){$location.path("articles/"+response._id)},function(errorResponse){$scope.error=errorResponse.data.message}),this.title="",this.content=""},$scope.remove=function(article){if(article){article.$remove();for(var i in $scope.articles)$scope.articles[i]===article&&$scope.articles.splice(i,1)}else $scope.article.$remove(function(){$location.path("articles")})},$scope.update=function(){var article=$scope.article;article.$update(function(){$location.path("articles/"+article._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.articles=Articles.query()},$scope.findOne=function(){$scope.article=Articles.get({articleId:$stateParams.articleId})}}]),angular.module("articles").factory("Articles",["$resource",function($resource){return $resource("articles/:articleId",{articleId:"@_id"},{update:{method:"PUT"}})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","$location","Authentication","Menus",function($scope,$location,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.goTo=function(name){"auth/signout"===name?window.location.href=name:$location.path(name)},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","$interval","Authentication",function($scope,$interval,Authentication){$scope.authentication=Authentication}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["user"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:isPublic||this.menus[menuId].isPublic,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:isPublic||this.menus[menuId].isPublic,roles:roles||this.defaultRoles,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("koora-admin").config(["$stateProvider",function($stateProvider){$stateProvider.state("koora-admin",{url:"/koora-admin",templateUrl:"modules/koora-admin/views/koora-admin.client.view.html"}),$stateProvider.state("koora-admin-emails",{url:"/koora-admin-emails",templateUrl:"modules/koora-admin/views/emails.client.view.html"})}]),angular.module("koora-admin").controller("KooraAdminController",["$scope","$sce","$location","Authentication","MatchSchedule","Admin",function($scope,$sce,$location,Authentication,MatchSchedule,AdminService){$scope.authentication=Authentication,$scope.teamsNames=MatchSchedule.teamsNames,Authentication.user&&Authentication.user.roles&&_.contains(Authentication.user.roles,"admin")||$location.path("/");var findByMatchId=function(matches,matchId){return _.find(matches,function(match){return match.matchId===matchId})};$scope.saveScore=function(matchScore){$scope.savingInProgress=!0,AdminService.saveScore(matchScore).success(function(res,status){console.log(res,status),matchScore.disabled=!0,$scope.savingInProgress=!1}).error(function(res,status){console.log(res,status),alert("saving score failed"),$scope.savingInProgress=!1})},$scope.updateStandings=function(){AdminService.updateStandings().success(function(res,status){console.log(res,status),alert("standings updated successfully")}).error(function(res,status){console.log(res,status),alert("standings update failed")})},$scope.renderHtml=function(html_code){return $sce.trustAsHtml(html_code)},$scope.loadEmails=function(){AdminService.getEmails().success(function(res){$scope.emails=res}).error(function(res,status){console.log(res,status),alert("error loading emails")})},$scope.sendEmails=function(){$scope.emailPassword="",$scope.savingInProgress=!0,AdminService.sendEmails().success(function(res){$scope.emailSentResponse=res,$scope.savingInProgress=!1}).error(function(res,status){console.log(res,status),alert("error sending emails"),$scope.savingInProgress=!1})},$scope.generateEmails=function(){AdminService.generateEmails($scope.emailToSend).success(function(res){$scope.emails=res}).error(function(res,status){console.log(res,status),alert("error generating emails")})},AdminService.getMatchScores().success(function(scores){var matches=_.sortBy(_.flatten(_.map(MatchSchedule.schedule,function(group){return group.matches})),function(match){return match.matchId});_.each(scores,function(score){var match=findByMatchId(matches,score.matchId);match.disabled=!0,match.team1Score=score.team1Score,match.team2Score=score.team2Score}),$scope.matchSchedule=matches})}]),angular.module("koora-admin").factory("Admin",["$http",function($http){return{saveScore:function(matchScore){return $http.post("/koora-admin/match-score/",matchScore)},updateStandings:function(){return $http.post("/koora-admin/update-standings/")},getMatchScores:function(){return $http.get("/koora-admin/match-score/")},getEmails:function(){return $http.get("/koora-admin/email-updates/")},sendEmails:function(){return $http.post("/koora-admin/email-updates/send")},generateEmails:function(emailOptions){return $http.post("/koora-admin/email-updates/generate",emailOptions)}}}]),angular.module("koora").config(["$stateProvider",function($stateProvider){$stateProvider.state("my-predictions",{url:"/my-predictions",templateUrl:"modules/koora/views/my-predictions.client.view.html"}).state("my-pools",{url:"/my-pools",templateUrl:"modules/koora/views/my-pools.client.view.html"}).state("my-standings",{url:"/my-standings",templateUrl:"modules/koora/views/my-pools.client.view.html"}).state("view-league",{url:"/my-leagues/:name",templateUrl:"modules/koora/views/my-pools.client.view.html"}).state("view-pool",{url:"/my-pools/:name",templateUrl:"modules/koora/views/my-pools.client.view.html"})}]),angular.module("koora").config(["$tooltipProvider",function($tooltipProvider){$tooltipProvider.setTriggers({mouseenter:"mouseleave",click:"click",focus:"blur",never:"mouseleave",showTip:"hideTip"})}]),angular.module("kooraConfiguration",[]),angular.module("koora").controller("MyPoolsController",["$scope","$stateParams","$location","Authentication","Pool","MatchSchedule",function($scope,$stateParams,$location,Authentication,Pool,matchSchedule){var $originalScope=$scope;$scope.authentication=Authentication,$scope.teamsNames=matchSchedule.teamsNames,$scope.baseUrl=$location.protocol()+"://"+$location.host()+"/#!/my-leagues",$scope.returnUrl=$location.url(),$scope.groupByName=!1,$scope.groupFound=!0,$scope.isMemberOfGroup=!0,$stateParams.name&&($scope.groupByName=!0),$scope.showMemberDetails=function(member){member.stats||Pool.getUserStats(member.username).success(function(doc){member.stats=doc,member.stats.correctScores=_.filter(member.stats.userMatches,function(match){return 5===match.points}).length,member.stats.correctOutcomes=_.filter(member.stats.userMatches,function(match){return 3===match.points}).length}).error(function(doc){console.log(doc),alert("Error loading member stats")}),member.showMemberDetails=!member.showMemberDetails,member.showDetails=!0};var loadPool=function(pool){$scope.poolToJoin=pool,$scope.groupFound=!0,$scope.groupNotFoundName="";var userPools=Authentication.user.pools;if(null!=userPools){var matchedPool=_.find(userPools,function(userPool){return userPool.name===pool.name});$originalScope.isMemberOfGroup=!_.isUndefined(matchedPool),matchedPool&&($originalScope.selectedPool=_.extend(matchedPool,pool))}else $originalScope.isMemberOfGroup=!1},initPool=function(poolToLoad){if(!Authentication.user)return void $scope.notAuthenticated;var poolName=poolToLoad||$stateParams.name;Pool.get(poolName).success(loadPool).error(function(data,status){404===status&&($scope.groupFound=!1,$scope.groupNotFoundName=poolName)})};$scope.authentication.user&&($scope.myPools=Authentication.user.pools||[],$stateParams.name?(initPool(),$scope.groupByName=!0):($scope.groupNotFoundName="",$scope.myPools.length>0&&($scope.selectedPool=_.last($scope.myPools),$scope.isPoolAdmin=void 0!==_.find($scope.myPools,function(pool){return pool.isAdmin}),initPool($scope.selectedPool.name)))),$scope.goTo=function(name){$location.path("my-leagues/"+name)},$scope.savePool=function(){return Pool.save($scope.poolToSave).success(function(res){$scope.poolToSave.displayName="",$scope.isPoolAdmin=!0,res.isAdmin=!0,$scope.myPools.push(res),$scope.savedPool=res}).error(function(data){alert(data&&data.message||"An error occured")})},$scope.joinPool=function(){$scope.joinError="",Pool.join($scope.poolToJoin.name,$scope.joinPassword).success(function(res){$originalScope.joinPassword="",$originalScope.joinedSuccess=!0,$originalScope.authentication.user.pools=$originalScope.authentication.user.pools||[],$originalScope.authentication.user.pools.push(res)}).error(function(res){$originalScope.joinPassword="",$originalScope.joinError=res.message})}}]),angular.module("koora").controller("MyPredictionsController",["$scope","$timeout","$filter","$modal","Authentication","MatchSchedule","ScoreSheet",function($scope,$timeout,$filter,$modal,Authentication,matchSchedule,scoreSheet){$scope.authentication=Authentication,$scope.teamsNames=matchSchedule.teamsNames,$scope.standings={};var somethingChanged=!1,initializing=!0;$scope.$watch("matchSchedule",function(newValue,oldValue){newValue&&(newValue==oldValue||initializing||(console.log("somethingChanged"),somethingChanged=!0))},!0);var saveScoresheet=function(){return scoreSheet.save($scope.matchSchedule,{qualifiers:_.map($scope.qualifiers,function(v,k){return k}),finalist1:$scope.finalist1,finalist2:$scope.finalist2,winner:$scope.winner})};$scope.$watchCollection("[finalist1, finalist2]",function(newValues,oldValues){oldValues&&newValues&&!_.contains(newValues,$scope.winner)&&($scope.winner=newValues[0]||newValues[1])}),$scope.changeGroup=function(group){$scope.selectedGroup=_.find($scope.matchSchedule,function(schedule){return schedule.group===group.group})};angular.element(document.getElementsByClassName("save-success-tooltip"));$scope.checkMissingScores=function(){$scope.finalist1&&$scope.finalist2&&$scope.winner?($scope.savingInProgress=!0,$scope.showMissingScores=!1,$scope.showMissingFinalists=!1,saveScoresheet().success(function(){somethingChanged=!1,$timeout(function(){$scope.savingInProgress=!1,angular.element(document.getElementsByClassName("save-success-tooltip")).triggerHandler("showTip"),$timeout(function(){angular.element(document.getElementsByClassName("save-success-tooltip")).triggerHandler("hideTip")},2e3)},500)}).error(function(){$scope.savingInProgress=!1,alert("error while saving")})):$scope.showMissingScores=!0},$scope.allMatchesByDay={},$scope.$watch("selectedDay",function(){somethingChanged&&$scope.checkMissingScores()}),matchSchedule.getSchedule().success(function(res){$scope.matchSchedule=res,$scope.selectedGroup=$scope.matchSchedule[0];var matchesByDay=_.groupBy(_.sortBy(_.flatten(_.pluck($scope.matchSchedule,"matches")),function(match){return match.date}),function(match){return $filter("date")(match.date,"shortDate")});$scope.daysPagerCount=_.keys(matchesByDay).length,$scope.dayToDays={};var i=0;_.each(matchesByDay,function(day){i++,$scope.allMatchesByDay[i]=day}),$scope.selectedDay=Math.round((Date.now()-Date.parse("2014-06-12"))/1e3/3600/24),_.each($scope.matchSchedule,function(group){$scope.standings[group.group]=[],_.each(group.matches,function(match){_.each([match.team1,match.team2],function(team){0!==$scope.standings.length&&_.find($scope.standings[group.group],function(item){return item.team===team})||$scope.standings[group.group].push({team:team,played:0,won:0,drawn:0,lost:0,gf:0,ga:0,pts:0})})})}),Authentication.user&&(scoreSheet.get().success(function(response){if(response.scores){var savedScores=_.object(_.map(response.scores,function(scoreSheet){return[scoreSheet.matchId,{team1Score:scoreSheet.team1Score,team2Score:scoreSheet.team2Score}]}));_.each($scope.matchSchedule,function(group){_.each(group.matches,function(match){match.team1Score=(savedScores[match.matchId]||{}).team1Score,match.team2Score=(savedScores[match.matchId]||{}).team2Score})}),$scope.finalist1=response.extraPredictions.finalist1,$scope.finalist2=response.extraPredictions.finalist2,$scope.winner=response.extraPredictions.winner}}).error(function(){alert("Error loading your predictions")}),initializing=!1)})}]),angular.module("koora").controller("WidgetsController",["$scope","Authentication","Widgets",function($scope,Authentication,Widgets){$scope.authentication=Authentication,$scope.loadScores=function(){Widgets.getMatchScores().success(function(doc){console.log(doc),$scope.matchesScores=doc}).error(function(doc,err){$scope.errorMesasage=err,console.log("error")})}}]),angular.module("koora").directive("numbersOnly",function(){return{require:"ngModel",link:function(scope,element,attrs,modelCtrl){modelCtrl.$parsers.push(function(inputValue){if(inputValue){var transformedInput=inputValue.replace(/[^0-9]/g,"");return transformedInput.toString().length>2&&(transformedInput=transformedInput.substring(0,2)),2==transformedInput.toString().length&&"0"===transformedInput.toString()[0]&&(transformedInput=transformedInput.substring(1)),transformedInput!==inputValue&&(modelCtrl.$setViewValue(transformedInput),modelCtrl.$render()),parseInt(transformedInput||0)}})}}}),angular.module("koora").service("MatchSchedule",["$http",function($http){this.getSchedule=function(){return $http.get("/matches-schedule")},this.schedule=[{group:"A",matches:[{matchId:1,date:"2014-06-12T21:00+0100",team1:"BRA",team2:"CRO"},{matchId:2,date:"2014-06-13T17:00+0100",team1:"MEX",team2:"CMR"},{matchId:17,date:"2014-06-17T20:00+0100",team1:"BRA",team2:"MEX"},{matchId:18,date:"2014-06-18T23:00+0100",team1:"CMR",team2:"CRO"},{matchId:33,date:"2014-06-23T21:00+0100",team1:"CMR",team2:"BRA"},{matchId:34,date:"2014-06-23T21:00+0100",team1:"CRO",team2:"MEX"}]},{group:"B",matches:[{matchId:3,date:"2014-06-13T20:00+0100",team1:"ESP",team2:"NED"},{matchId:4,date:"2014-06-13T23:00+0100",team1:"CHI",team2:"AUS"},{matchId:20,date:"2014-06-18T17:00+0100",team1:"AUS",team2:"NED"},{matchId:19,date:"2014-06-18T20:00+0100",team1:"ESP",team2:"CHI"},{matchId:35,date:"2014-06-23T17:00+0100",team1:"AUS",team2:"ESP"},{matchId:36,date:"2014-06-23T17:00+0100",team1:"NED",team2:"CHI"}]},{group:"C",matches:[{matchId:5,date:"2014-06-14T17:00+0100",team1:"COL",team2:"GRE"},{matchId:6,date:"2014-06-15T02:00+0100",team1:"CIV",team2:"JPN"},{matchId:21,date:"2014-06-19T17:00+0100",team1:"COL",team2:"CIV"},{matchId:22,date:"2014-06-19T23:00+0100",team1:"JPN",team2:"GRE"},{matchId:37,date:"2014-06-24T21:00+0100",team1:"JPN",team2:"COL"},{matchId:38,date:"2014-06-24T21:00+0100",team1:"GRE",team2:"CIV"}]},{group:"D",matches:[{matchId:7,date:"2014-06-14T20:00+0100",team1:"URU",team2:"CRC"},{matchId:8,date:"2014-06-14T23:00+0100",team1:"ENG",team2:"ITA"},{matchId:23,date:"2014-06-19T20:00+0100",team1:"URU",team2:"ENG"},{matchId:24,date:"2014-06-20T17:00+0100",team1:"ITA",team2:"CRC"},{matchId:39,date:"2014-06-24T17:00+0100",team1:"ITA",team2:"URU"},{matchId:40,date:"2014-06-24T17:00+0100",team1:"CRC",team2:"ENG"}]},{group:"E",matches:[{matchId:9,date:"2014-06-15T17:00+0100",team1:"SUI",team2:"ECU"},{matchId:10,date:"2014-06-15T20:00+0100",team1:"FRA",team2:"HON"},{matchId:25,date:"2014-06-20T20:00+0100",team1:"SUI",team2:"FRA"},{matchId:26,date:"2014-06-20T23:00+0100",team1:"HON",team2:"ECU"},{matchId:41,date:"2014-06-25T21:00+0100",team1:"HON",team2:"SUI"},{matchId:42,date:"2014-06-25T21:00+0100",team1:"ECU",team2:"FRA"}]},{group:"F",matches:[{matchId:11,date:"2014-06-15T23:00+0100",team1:"ARG",team2:"BIH"},{matchId:12,date:"2014-06-16T20:00+0100",team1:"IRN",team2:"NGA"},{matchId:27,date:"2014-06-21T17:00+0100",team1:"ARG",team2:"IRN"},{matchId:28,date:"2014-06-21T23:00+0100",team1:"NGA",team2:"BIH"},{matchId:43,date:"2014-06-25T17:00+0100",team1:"NGA",team2:"ARG"},{matchId:44,date:"2014-06-25T17:00+0100",team1:"BIH",team2:"IRN"}]},{group:"G",matches:[{matchId:13,date:"2014-06-16T17:00+0100",team1:"GER",team2:"POR"},{matchId:14,date:"2014-06-16T23:00+0100",team1:"GHA",team2:"USA"},{matchId:29,date:"2014-06-21T20:00+0100",team1:"GER",team2:"GHA"},{matchId:30,date:"2014-06-22T23:00+0100",team1:"USA",team2:"POR"},{matchId:45,date:"2014-06-26T17:00+0100",team1:"USA",team2:"GER"},{matchId:46,date:"2014-06-26T17:00+0100",team1:"POR",team2:"GHA"}]},{group:"H",matches:[{matchId:15,date:"2014-06-17T17:00+0100",team1:"BEL",team2:"ALG"},{matchId:16,date:"2014-06-17T23:00+0100",team1:"RUS",team2:"KOR"},{matchId:31,date:"2014-06-22T17:00+0100",team1:"BEL",team2:"RUS"},{matchId:32,date:"2014-06-22T20:00+0100",team1:"KOR",team2:"ALG"},{matchId:47,date:"2014-06-26T21:00+0100",team1:"KOR",team2:"BEL"},{matchId:48,date:"2014-06-26T21:00+0100",team1:"ALG",team2:"RUS"}]},{group:"Round16",matches:[{matchId:161,date:"2014-06-28T17:00+0100",team1:"BRA",team2:"CHI"},{matchId:162,date:"2014-06-28T21:00+0100",team1:"COL",team2:"URU"},{matchId:163,date:"2014-06-29T17:00+0100",team1:"NED",team2:"MEX"},{matchId:164,date:"2014-06-29T21:00+0100",team1:"CRC",team2:"GRE"},{matchId:165,date:"2014-06-30T17:00+0100",team1:"FRA",team2:"NGA"},{matchId:166,date:"2014-06-30T21:00+0100",team1:"GER",team2:"ALG"},{matchId:167,date:"2014-07-01T17:00+0100",team1:"ARG",team2:"SUI"},{matchId:168,date:"2014-07-01T21:00+0100",team1:"BEL",team2:"USA"}]}],this.teamsNames={BRA:"Brazil",CRO:"Croatia",MEX:"Mexico",CMR:"Cameroon",ESP:"Spain",NED:"Netherlands",CHI:"Chile",AUS:"Australia",COL:"Colombia",GRE:"Greece",CIV:"Cote d'ivoire",JPN:"Japan",URU:"Uruguay",CRC:"Costa Rica",ENG:"England",ITA:"Italy",SUI:"Switzerland",ECU:"Ecuador",FRA:"France",HON:"Honduras",ARG:"Argentina",BIH:"Bosnia",IRN:"Iran",NGA:"Nigeria",GER:"Germany",POR:"Portugal",GHA:"Ghana",USA:"USA",BEL:"Belgium",ALG:"Algeria",RUS:"Russia",KOR:"Korea"}}]),angular.module("koora").factory("Pool",["$http",function($http){return{get:function(name){return $http.get("/pool/"+name)},join:function(name,password){return $http.post("pool/"+name+"/join",{password:password})},getUserStats:function(user){return $http.get("/stats/user/"+user)},save:function(pool){return $http.post("/Pool",pool)}}}]),angular.module("koora").factory("ScoreSheet",["$http",function($http){return{get:function(){return $http.get("/ScoreSheet")},save:function(matchSchedule,extraPredictions){var scoreSheet=_.map(matchSchedule,function(group){return _.map(group.matches,function(match){return{matchId:match.matchId,team1Score:match.team1Score,team2Score:match.team2Score}})});return scoreSheet=_.flatten(scoreSheet),$http.put("/ScoreSheet",{scores:scoreSheet,extraPredictions:extraPredictions})}}}]),angular.module("koora").factory("Widgets",["$http",function($http){return{getMatchScores:function(){return $http.get("/widgets/match-scores?limit=9")}}}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("reset-password",{url:"/reset-password?resetKey",templateUrl:"modules/users/views/reset-password.client.view.html"}).state("signup",{url:"/signup?returnUrl",templateUrl:"modules/users/views/signup.client.view.html"}).state("signin",{url:"/signin?returnUrl",templateUrl:"modules/users/views/signin.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","$stateParams","Authentication","MatchSchedule",function($scope,$http,$location,$stateParams,Authentication,matchSchedule){$scope.authentication=Authentication,$scope.teamsNames=matchSchedule.teamsNames,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$scope.credentials.predictions={finalist1:$scope.finalist1,finalist2:$scope.finalist2,winner:$scope.winner},$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path($stateParams.returnUrl?$stateParams.returnUrl:"/")}).error(function(response){$scope.error=response.message})},$scope.$watchCollection("[finalist1, finalist2]",function(newValues){_.contains(newValues,$scope.winner)&&($scope.winner=newValues[0]||newValues[1])}),$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path($stateParams.returnUrl?$stateParams.returnUrl:"/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("ResetPasswordController",["$scope","$http","$location","$stateParams","Authentication","ResetPassword",function($scope,$http,$location,$stateParams,Authentication,ResetPassword){$scope.authentication=Authentication,console.log($stateParams),$stateParams.resetKey&&($scope.resetPasswordDetails={resetKey:$stateParams.resetKey}),$scope.ajaxInProgress=!1,$scope.authentication.user&&$location.path("/"),$scope.requestResetKey=function(){$scope.ajaxInProgress=!0,ResetPassword.requestResetKey($scope.resetPasswordDetails.email).success(function(data){data&&data.success&&($scope.keyRequestSuccess=!0),$scope.resetPasswordDetails.email="",$scope.error=!1,$scope.ajaxInProgress=!1}).error(function(data){$scope.error=data&&data.message,$scope.resetPasswordDetails.email="",$scope.keyRequestSuccess=!1,$scope.ajaxInProgress=!1})},$scope.resetPassword=function(){ResetPassword.resetPassword($scope.resetPasswordDetails).success(function(data){data&&data.message&&(window.location="/"),$scope.error=!1,$scope.ajaxInProgress=!1}).error(function(data){$scope.error=data&&data.message,$scope.keyRequestSuccess=!1,$scope.ajaxInProgress=!1})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("koora").factory("ResetPassword",["$http",function($http){return{requestResetKey:function(email){return $http.post("/password-reset/"+email)},resetPassword:function(resetDetails){return $http.post("/users/password",resetDetails)}}}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);