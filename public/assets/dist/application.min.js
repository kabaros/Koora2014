"use strict";var ApplicationConfiguration=function(){var applicationModuleName="mean",applicationModuleVendorDependencies=["ngResource","ngAnimate","ui.router","ui.bootstrap","ui.utils"],registerModule=function(moduleName){angular.module(moduleName,[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("articles"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("koora"),ApplicationConfiguration.registerModule("users"),angular.module("articles").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Articles","articles","dropdown","/articles(/create)?"),Menus.addSubMenuItem("topbar","articles","List Articles","articles"),Menus.addSubMenuItem("topbar","articles","New Article","articles/create")}]),angular.module("articles").config(["$stateProvider",function($stateProvider){$stateProvider.state("listArticles",{url:"/articles",templateUrl:"modules/articles/views/list-articles.client.view.html"}).state("createArticle",{url:"/articles/create",templateUrl:"modules/articles/views/create-article.client.view.html"}).state("viewArticle",{url:"/articles/:articleId",templateUrl:"modules/articles/views/view-article.client.view.html"}).state("editArticle",{url:"/articles/:articleId/edit",templateUrl:"modules/articles/views/edit-article.client.view.html"})}]),angular.module("articles").controller("ArticlesController",["$scope","$stateParams","$location","Authentication","Articles",function($scope,$stateParams,$location,Authentication,Articles){$scope.authentication=Authentication,$scope.create=function(){var article=new Articles({title:this.title,content:this.content});article.$save(function(response){$location.path("articles/"+response._id)},function(errorResponse){$scope.error=errorResponse.data.message}),this.title="",this.content=""},$scope.remove=function(article){if(article){article.$remove();for(var i in $scope.articles)$scope.articles[i]===article&&$scope.articles.splice(i,1)}else $scope.article.$remove(function(){$location.path("articles")})},$scope.update=function(){var article=$scope.article;article.$update(function(){$location.path("articles/"+article._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.articles=Articles.query()},$scope.findOne=function(){$scope.article=Articles.get({articleId:$stateParams.articleId})}}]),angular.module("articles").factory("Articles",["$resource",function($resource){return $resource("articles/:articleId",{articleId:"@_id"},{update:{method:"PUT"}})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","$location","Authentication","Menus",function($scope,$location,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.goTo=function(name){"auth/signout"===name?window.location.href=name:$location.path(name)},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","$interval","Authentication",function($scope,$interval,Authentication){function showRemaining(){var now=new Date,distance=worldCupStartDate-now;if(0>distance)return $interval.cancel(timer),void($scope.remaingTime={days:0,hours:0,minutes:0,seconds:0});var days=Math.floor(distance/_day),hours=Math.floor(distance%_day/_hour),minutes=Math.floor(distance%_hour/_minute),seconds=Math.floor(distance%_minute/_second);$scope.remainingTime={days:days,hours:hours,minutes:minutes,seconds:seconds}}$scope.authentication=Authentication;var timer,worldCupStartDate=new Date("2014-06-12T16:00+0100"),_second=1e3,_minute=60*_second,_hour=60*_minute,_day=24*_hour;timer=$interval(showRemaining,1e3)}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["user"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:isPublic||this.menus[menuId].isPublic,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:isPublic||this.menus[menuId].isPublic,roles:roles||this.defaultRoles,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("koora").config(["$stateProvider",function($stateProvider){$stateProvider.state("my-predictions",{url:"/my-predictions",templateUrl:"modules/koora/views/my-predictions.client.view.html"}).state("my-pools",{url:"/my-pools",templateUrl:"modules/koora/views/my-pools.client.view.html"}).state("view-pool",{url:"/my-pools/:name",templateUrl:"modules/koora/views/my-pools.client.view.html"})}]),angular.module("kooraConfiguration",[]),angular.module("koora").controller("MyPoolsController",["$scope","$stateParams","$location","Authentication","Pool",function($scope,$stateParams,$location,Authentication,Pool){var $originalScope=$scope;$scope.authentication=Authentication,$scope.baseUrl=$location.absUrl(),$scope.groupByName=!1,$scope.groupFound=!0,$scope.isMemberOfGroup=!0;var loadPool=function(pool,status){console.log("succes",pool,status),$scope.poolToJoin=pool,$scope.groupFound=!0,$scope.groupNotFoundName="";var userPools=Authentication.user.pools;if(null!=userPools){var matchedPool=_.find(userPools,function(userPool){return userPool.name===pool.name});$originalScope.isMemberOfGroup=!_.isUndefined(matchedPool),matchedPool&&($originalScope.selectedPool=_.extend(matchedPool,pool))}else $originalScope.isMemberOfGroup=!1},initPool=function(poolToLoad){if(!Authentication.user)return void $scope.notAuthenticated;var poolName=poolToLoad||$stateParams.name;console.log("getting "+poolName),Pool.get(poolName).success(loadPool).error(function(data,status){404===status&&($scope.groupFound=!1,$scope.groupNotFoundName=poolName),console.log("error",data,status)})};$scope.authentication.user&&($scope.myPools=Authentication.user.pools||[],$scope.myPools.length>0&&($scope.selectedPool=_.last($scope.myPools),$scope.isPoolAdmin=void 0!==_.find($scope.myPools,function(pool){return pool.isAdmin}),initPool($scope.selectedPool.name)),$stateParams.name?(initPool(),$scope.groupByName=!0):$scope.groupNotFoundName=""),$scope.goTo=function(name){$location.path("my-pools/"+name)},$scope.savePool=function(){return Pool.save($scope.poolToSave).success(function(res){$scope.poolToSave.displayName="",$scope.isPoolAdmin=!0,res.isAdmin=!0,$scope.myPools.push(res),$scope.savedPool=res}).error(function(data,status){console.log("error",data,status),alert(data&&data.message||"An error occured")})},$scope.joinPool=function(){$scope.joinError="",Pool.join($scope.poolToJoin.name,$scope.joinPassword).success(function(res,status){$originalScope.joinPassword="",$originalScope.joinedSuccess=!0,$originalScope.authentication.user.pools=$originalScope.authentication.user.pools||[],$originalScope.authentication.user.pools.push(res),console.log("success join pool",res,status)}).error(function(res){$originalScope.joinPassword="",$originalScope.joinError=res.message,console.log(res)})}}]),angular.module("koora").controller("MyPredictionsController",["$scope","$modal","Authentication","MatchSchedule","ScoreSheet",function($scope,$modal,Authentication,matchSchedule,scoreSheet){function clearStanding(group){for(var i=0;i<group.length;i++){var team=group[i];team.played=team.won=team.drawn=team.lost=team.gf=team.ga=team.pts=0}}$scope.authentication=Authentication,$scope.matchSchedule=matchSchedule.schedule,$scope.teamsNames=matchSchedule.teamsNames,$scope.standings={},_.each($scope.matchSchedule,function(group){$scope.standings[group.group]=[],_.each(group.matches,function(match){_.each([match.team1,match.team2],function(team){0!==$scope.standings.length&&_.find($scope.standings[group.group],function(item){return item.team===team})||$scope.standings[group.group].push({team:team,played:0,won:0,drawn:0,lost:0,gf:0,ga:0,pts:0})})})}),$scope.$watch("matchSchedule",function(){$scope.missingScores=[],$scope.qualifiers={};for(var standings=$scope.standings,standingChanged=!1,i=0;i<$scope.matchSchedule.length;i++){var group=$scope.matchSchedule[i],currentgroup=standings[group.group];clearStanding(currentgroup),group.scoresAdded=0;for(var j=0;j<group.matches.length;j++){var match=group.matches[j],team1=match.team1,team2=match.team2;if(!_.isUndefined(match.team1Score)&&!_.isUndefined(match.team2Score)){group.scoresAdded++,standingChanged=!0;var team1Standing=_.find(currentgroup,function(item){return item.team===team1}),team2Standing=_.find(currentgroup,function(item){return item.team===team2});team1Standing.played=++team1Standing.played,team2Standing.played=++team2Standing.played,team1Standing.gf=team1Standing.gf+match.team1Score,team1Standing.ga=team1Standing.ga+match.team2Score,team2Standing.gf=team2Standing.gf+match.team2Score,team2Standing.ga=team2Standing.ga+match.team1Score,match.team1Score===match.team2Score?(team1Standing.pts++,team2Standing.pts++):match.team1Score>match.team2Score?team1Standing.pts+=3:match.team2Score>match.team1Score&&(team2Standing.pts+=3)}}6!==group.scoresAdded&&$scope.missingScores.push("Group "+group.group+" is missing "+(6-group.scoresAdded)+" scores."),$scope.standings[group.group].sort(function(a,b){if(a.pts!==b.pts)return a.pts<b.pts;var aDiff=a.gf-a.ga,bDiff=b.gf-b.ga;return aDiff!==bDiff?bDiff>aDiff:a.gf<b.gf});var firstQualifier=$scope.standings[group.group][0].team,secondQualifier=$scope.standings[group.group][1].team;group.qualifiers=[firstQualifier,secondQualifier],$scope.qualifiers[firstQualifier]=$scope.teamsNames[firstQualifier],$scope.qualifiers[secondQualifier]=$scope.teamsNames[secondQualifier]}console.log("missingScores",$scope.missingScores.length),standingChanged&&console.log("latestStanding",$scope.standings)},!0),$scope.selectedGroup=$scope.matchSchedule[0];var saveScoresheet=function(){return scoreSheet.save($scope.matchSchedule,{qualifiers:_.map($scope.qualifiers,function(v,k){return k}),finalist1:$scope.finalist1,finalist2:$scope.finalist2,winner:$scope.winner})};$scope.$watchCollection("[finalist1, finalist2]",function(newValues,oldValues){oldValues&&newValues&&!_.contains(newValues,$scope.winner)&&($scope.winner=newValues[0]||newValues[1])}),$scope.changeGroup=function(group){$scope.selectedGroup=_.find($scope.matchSchedule,function(schedule){return schedule.group===group.group})},$scope.checkMissingScores=function(){$scope.missingScores.length<8&&$scope.finalist1&&$scope.finalist2&&$scope.winner?($scope.savingInProgress=!0,$scope.showMissingScores=!1,$scope.showMissingFinalists=!1,saveScoresheet().success(function(response){setTimeout(function(){$scope.savingInProgress=!1,console.log("saved for real",response),$modal.open({template:' <div class="modal-header"><h3 class="modal-title">Your predictions were successfully saved!</h3></div><div class="modal-body">Now sit back, relax and enjoy the fun.<br/><br/>Your predictions will be locked for changes two hours before the opening game.</div>'})},1e3)}).error(function(data,status){$scope.savingInProgress=!1,console.log(data,status),alert("error while saving")})):$scope.showMissingScores=!0},Authentication.user&&scoreSheet.get().success(function(response){if(response.scores){var savedScores=_.object(_.map(response.scores,function(scoreSheet){return[scoreSheet.matchId,{team1Score:scoreSheet.team1Score,team2Score:scoreSheet.team2Score}]}));_.each($scope.matchSchedule,function(group){_.each(group.matches,function(match){console.log("savedscore",savedScores[match.matchId]),match.team1Score=(savedScores[match.matchId]||{}).team1Score,match.team2Score=(savedScores[match.matchId]||{}).team2Score})}),$scope.finalist1=response.extraPredictions.finalist1,$scope.finalist2=response.extraPredictions.finalist2,$scope.winner=response.extraPredictions.winner,console.log("returned",response)}}).error(function(){alert("Error loading your predictions")})}]),angular.module("koora").controller("PoolViewController",["$scope","Authentication","$stateParams","$location","Pool","MatchSchedule",function($scope,Authentication,$stateParams,$location,Pool,matchSchedule){$scope.authentication=Authentication,$scope.teamsNames=matchSchedule.teamsNames}]),angular.module("koora").directive("numbersOnly",function(){return{require:"ngModel",link:function(scope,element,attrs,modelCtrl){modelCtrl.$parsers.push(function(inputValue){if(inputValue){var transformedInput=inputValue.replace(/[^0-9]/g,"");return transformedInput.toString().length>2&&(transformedInput=transformedInput.substring(0,2)),2==transformedInput.toString().length&&"0"===transformedInput.toString()[0]&&(transformedInput=transformedInput.substring(1)),transformedInput!==inputValue&&(modelCtrl.$setViewValue(transformedInput),modelCtrl.$render()),parseInt(transformedInput||0)}})}}}),angular.module("koora").service("MatchSchedule",[function(){this.schedule=[{group:"A",matches:[{matchId:1,date:"2014-06-12T16:00+0100",team1:"BRA",team2:"CRO"},{matchId:2,date:"2014-06-13T13:00+0100",team1:"MEX",team2:"CMR"},{matchId:17,date:"2014-06-17T16:00+0100",team1:"BRA",team2:"MEX"},{matchId:18,date:"2014-06-18T19:00+0100",team1:"CMR",team2:"CRO"},{matchId:33,date:"2014-06-23T17:00+0100",team1:"CMR",team2:"BRA"},{matchId:34,date:"2014-06-23T17:00+0100",team1:"CRO",team2:"MEX"}]},{group:"B",matches:[{matchId:3,date:"2014-06-13T16:00+0100",team1:"ESP",team2:"NED"},{matchId:4,date:"2014-06-13T19:00+0100",team1:"CHI",team2:"AUS"},{matchId:20,date:"2014-06-18T13:00+0100",team1:"AUS",team2:"NED"},{matchId:19,date:"2014-06-18T16:00+0100",team1:"ESP",team2:"CHI"},{matchId:35,date:"2014-06-23T13:00+0100",team1:"AUS",team2:"ESP"},{matchId:36,date:"2014-06-23T13:00+0100",team1:"NED",team2:"CHI"}]},{group:"C",matches:[{matchId:5,date:"2014-06-14T13:00+0100",team1:"COL",team2:"GRE"},{matchId:6,date:"2014-06-14T22:00+0100",team1:"CIV",team2:"JPN"},{matchId:21,date:"2014-06-19T13:00+0100",team1:"COL",team2:"CIV"},{matchId:22,date:"2014-06-19T19:00+0100",team1:"JPN",team2:"GRE"},{matchId:37,date:"2014-06-24T17:00+0100",team1:"JPN",team2:"COL"},{matchId:38,date:"2014-06-24T17:00+0100",team1:"GRE",team2:"CIV"}]},{group:"D",matches:[{matchId:7,date:"2014-06-14T16:00+0100",team1:"URU",team2:"CRC"},{matchId:8,date:"2014-06-14T19:00+0100",team1:"ENG",team2:"ITA"},{matchId:23,date:"2014-06-19T16:00+0100",team1:"URU",team2:"ENG"},{matchId:24,date:"2014-06-20T13:00+0100",team1:"ITA",team2:"CRC"},{matchId:39,date:"2014-06-24T13:00+0100",team1:"ITA",team2:"URU"},{matchId:40,date:"2014-06-24T13:00+0100",team1:"CRC",team2:"ENG"}]},{group:"E",matches:[{matchId:9,date:"2014-06-15T13:00+0100",team1:"SUI",team2:"ECU"},{matchId:10,date:"2014-06-15T16:00+0100",team1:"FRA",team2:"HON"},{matchId:25,date:"2014-06-20T16:00+0100",team1:"SUI",team2:"FRA"},{matchId:26,date:"2014-06-20T19:00+0100",team1:"HON",team2:"ECU"},{matchId:41,date:"2014-06-25T17:00+0100",team1:"HON",team2:"SUI"},{matchId:42,date:"2014-06-25T17:00+0100",team1:"ECU",team2:"FRA"}]},{group:"F",matches:[{matchId:11,date:"2014-06-15T19:00+0100",team1:"ARG",team2:"BIH"},{matchId:12,date:"2014-06-15T16:00+0100",team1:"IRN",team2:"NGA"},{matchId:27,date:"2014-06-21T13:00+0100",team1:"ARG",team2:"IRN"},{matchId:28,date:"2014-06-21T19:00+0100",team1:"NGA",team2:"BIH"},{matchId:43,date:"2014-06-21T13:00+0100",team1:"NGA",team2:"ARG"},{matchId:44,date:"2014-06-21T13:00+0100",team1:"BIH",team2:"IRN"}]},{group:"G",matches:[{matchId:13,date:"2014-06-16T13:00+0100",team1:"GER",team2:"POR"},{matchId:14,date:"2014-06-15T16:00+0100",team1:"GHA",team2:"USA"},{matchId:29,date:"2014-06-21T16:00+0100",team1:"GER",team2:"GHA"},{matchId:30,date:"2014-06-22T19:00+0100",team1:"USA",team2:"POR"},{matchId:45,date:"2014-06-26T13:00+0100",team1:"USA",team2:"GER"},{matchId:46,date:"2014-06-26T13:00+0100",team1:"POR",team2:"GHA"}]},{group:"H",matches:[{matchId:15,date:"2014-06-17T13:00+0100",team1:"BEL",team2:"ALG"},{matchId:16,date:"2014-06-17T19:00+0100",team1:"RUS",team2:"KOR"},{matchId:31,date:"2014-06-22T13:00+0100",team1:"BEL",team2:"RUS"},{matchId:32,date:"2014-06-22T16:00+0100",team1:"KOR",team2:"ALG"},{matchId:47,date:"2014-06-26T17:00+0100",team1:"KOR",team2:"BEL"},{matchId:48,date:"2014-06-26T17:00+0100",team1:"ALG",team2:"RUS"}]}],this.teamsNames={BRA:"Brazil",CRO:"Croatia",MEX:"Mexico",CMR:"Cameroon",ESP:"Spain",NED:"Netherlands",CHI:"Chile",AUS:"Australia",COL:"Colombia",GRE:"Greece",CIV:"Cote d'ivoire",JPN:"Japan",URU:"Uruguay",CRC:"Costa Rica",ENG:"England",ITA:"Italy",SUI:"Switzerland",ECU:"Ecuador",FRA:"France",HON:"Honduras",ARG:"Argentina",BIH:"Bosnia",IRN:"Iran",NGA:"Nigeria",GER:"Germany",POR:"Portugal",GHA:"Ghana",USA:"USA",BEL:"Belgium",ALG:"Algeria",RUS:"Russia",KOR:"Korea"}}]),angular.module("koora").factory("Pool",["$http",function($http){return{get:function(name){return $http.get("/pool/"+name)},join:function(name,password){return console.log("requesting to join",name,password),$http.post("pool/"+name+"/join",{password:password})},save:function(pool){return $http.post("/Pool",pool)}}}]),angular.module("koora").factory("ScoreSheet",["$http",function($http){return{get:function(){return $http.get("/ScoreSheet")},save:function(matchSchedule,extraPredictions){var scoreSheet=_.map(matchSchedule,function(group){return _.map(group.matches,function(match){return{matchId:match.matchId,team1Score:match.team1Score,team2Score:match.team2Score}})});return scoreSheet=_.flatten(scoreSheet),$http.put("/ScoreSheet",{scores:scoreSheet,extraPredictions:extraPredictions})}}}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/signin.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication","MatchSchedule",function($scope,$http,$location,Authentication,matchSchedule){$scope.authentication=Authentication,$scope.teamsNames=matchSchedule.teamsNames,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$scope.credentials.predictions={finalist1:$scope.finalist1,finalist2:$scope.finalist2,winner:$scope.winner},$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.$watchCollection("[finalist1, finalist2]",function(newValues){_.contains(newValues,$scope.winner)&&($scope.winner=newValues[0]||newValues[1])}),$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);